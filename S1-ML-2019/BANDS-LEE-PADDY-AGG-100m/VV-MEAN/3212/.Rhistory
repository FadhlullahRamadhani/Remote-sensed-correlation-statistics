a
a$cor
source('C:/Users/framadha/Google Drive/analysis12/korelasi2.R')
source('C:/Users/framadha/Google Drive/analysis12/korelasi2.R')
library(AER)
install.packages("AER")
install.packages("quantmod")
install.packages("quantmod")
install.packages("dynlm")
install.packages("orcutt")
install.packages("nlme")
install.packages("stargazer")
library(AER)
library(quantmod)
library(dynlm)
library(orcutt)
library(nlme)
library(stargazer)
data("FrozenJuice")
FOJCPI <- FrozenJuice[, "price"]/FrozenJuice[, "ppi"]
FOJC_pctc <- 100 * diff(log(FOJCPI))
FDD <- FrozenJuice[, "fdd"]
FOJCPI_xts <- as.xts(FOJCPI)
FDD_xts <- as.xts(FrozenJuice[, 3])
# Plot orange juice price index
plot(as.zoo(FOJCPI),
col = "steelblue",
lwd = 2,
xlab = "Date",
ylab = "Price index",
main = "Frozen Concentrated Orange Juice")
par(mfrow = c(2, 1))
# Plot percentage changes in prices
plot(as.zoo(FOJC_pctc),
col = "steelblue",
lwd = 2,
xlab = "Date",
ylab = "Percent",
main = "Monthly Changes in the Price of Frozen Conentrated Orange Juice")
# plot freezing degree days
plot(as.zoo(FDD),
col = "steelblue",
lwd = 2,
xlab = "Date",
ylab = "Freezing degree days",
main = "Monthly Freezing Degree Days in Orlando, FL")
source('~/.active-rstudio-document', echo=TRUE)
# plot freezing degree days
plot(as.zoo(FDD),
col = "steelblue",
lwd = 2,
xlab = "Date",
ylab = "Freezing degree days",
main = "Monthly Freezing Degree Days in Orlando, FL")
orange_SR <- dynlm(FOJC_pctc ~ FDD)
coeftest(orange_SR, vcov. = vcovHAC)
orange_DLM <- dynlm(FOJC_pctc ~ FDD + L(FDD, 1:6))
coeftest(orange_DLM, vcov. = vcovHAC)
debugSource('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list)) + L(ts(VEG_list), 2))
GDPGR_AR2
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),1))
GDPGR_AR2
coeftest(GDPGR_AR2, vcov. = sandwich)
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
summary(GDPGR_AR2)$sigma
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),1))
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list)))
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
coeftest(GDPGR_AR2, vcov. = sandwich)
ts(Paddy_harvested_list)
L(ts(VEG_list))
ts(VEG_list)
data_admin$VEG.planting.lag[i]
a <- Find_Max_CCF(VEG_list, Paddy_planting_list)
a
a <- Find_Max_CCF(VEG_list, Paddy_harvested_list)
data_admin$VEG.harvested.corr[i] <- a[1]$cor
data_admin$VEG.harvested.lag[i] <- a[2]$lag
a
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),-7))
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
summary(GDPGR_AR2)$sigma
coeftest(GDPGR_AR2, vcov. = sandwich)
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
coeftest(GDPGR_AR2, vcov. = sandwich)
a
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
summary(GDPGR_AR2)$sigma
coeftest(GDPGR_AR2, vcov. = sandwich)
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
summary(GDPGR_AR2)$sigma
coeftest
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
coeftest(GDPGR_AR2, vcov. = sandwich)
b <- coeftest(GDPGR_AR2, vcov. = sandwich)
b
b[1]
b[2]
debugSource('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
debugSource('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
b <- coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
b
a <- Find_Max_CCF(VEG_list, Paddy_harvested_list)
data_admin$VEG.harvested.corr[i] <- a[1]$cor
data_admin$VEG.harvested.lag[i] <- a[2]$lag
a
v
b
GDPGR_AR2
rsquare <-0
reg <- coeftest(GDPGR_AR2, vcov. = sandwich)
reg
rsquare_max <-0
lag_max <- -10
for (j in -10:10) {
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),j))
rsquare <- summary(GDPGR_AR2)$r.squared
if (rsquare>rsquare_max) {
lag_max <- j
rsquare_max <-lag_max
}
}
lag_max
rsquare_max
VEG_list
Paddy_harvested_list
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),j))
for (j in -10:10) {
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),j))
rsquare <- summary(GDPGR_AR2)$r.squared
if (rsquare>rsquare_max) {
lag_max <- j
rsquare_max <-lag_max
}
}
j
rsquare_max <-0
lag_max <- -10
for (j in -10:10) {
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),j))
rsquare <- summary(GDPGR_AR2)$r.squared
if (rsquare>rsquare_max) {
lag_max <- j
rsquare_max <-lag_max
}
}
lag_max
j
rsquare_max <-0
lag_max <- -10
for (j in -10:10) {
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),j))
rsquare <- summary(GDPGR_AR2)$r.squared
if (rsquare>rsquare_max) {
lag_max <- j
rsquare_max <-rsquare
}
}
rsquare_max
lag_max
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),lag_max))
GDPGR_AR2
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),lag_max))
reg <- coeftest(GDPGR_AR2, vcov. = sandwich)
reg
reg <- coeftest(GDPGR_AR2, vcov. = sandwich)
reg
reg[1]
reg[2]
reg[3]
reg
reg <- coeftest(GDPGR_AR2, vcov. = sandwich)
data_admin$VEG.harvested.reg.intercept.estimate[i] <- reg[1]
data_admin$VEG.harvested.reg.intercept.SE <- reg[3]
data_admin$VEG.harvested.reg.intercept.Tvalue[i] <- reg[5]
data_admin$VEG.harvested.reg.intercept.Pe <- reg[7]
data_admin$VEG.harvested.reg.X1.estimate[i] <- reg[2]
data_admin$VEG.harvested.reg.X1.SE <- reg[4]
data_admin$VEG.harvested.reg.X1.Tvalue[i] <- reg[6]
data_admin$VEG.harvested.reg.X1.Pe <- reg[7]
data_admin$VEG.harvested.reg.XLag[i] <- lag_max
data_admin$VEG.harvested.reg.rsquare[i] <- summary(GDPGR_AR2)$r.squared
data_admin$VEG.harvested.reg.sigma[i] <- summary(GDPGR_AR2)$sigma
View(data_admin)
source('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
reg
[9]
reg[9]
reg
reg[1,1]
reg[1,2]
reg[1,4]
reg[1,5]
reg[3,1]
reg[3]
reg[1,1]
reg
reg[1,2]
reg
source('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
data_admin$VEG.harvested.reg
data_admin$VEG.harvested.reg <- reg
data_admin$VEG.harvested.reg <- as.character(reg)
data_admin$VEG.harvested.reg <- as.array(reg)
as.array(reg)
reg$
q
reg[1]
reg[1,4]
reg
source('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
source('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
date_list
file_csv
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
subdistrict
temp
subdistrict
dat$subdistrict
temp <- dat[dat$subdistrict==subdistrict[j],]
area_ha_1 <- 0
# #print(file_csv)
dat = as.data.frame(read.csv(file_csv, header = TRUE))
subdistrict <- unique(dat$subdistrict)
if (length(subdistrict)>0){
for (j in 1:length(subdistrict)){
temp <- dat[dat$subdistrict==subdistrict[j],]
area_ha_1 <- 0
area_ha_2 <- 0
for (k in 1:dim(temp)[1]){
if (temp$code[k]==1) {
area_ha_1 <- area_ha_1 + temp$area_ha[k]
} else if (temp$code[k]==2) {
area_ha_2 <- area_ha_2 + temp$area_ha[k]
}
}
results[nrow(results) + 1, ] <- c(
as.character("S1_PROBA"),
as.character(model_ML),
as.character(paste("'",period,sep = "")),
as.double(area_ha_1),
as.double(area_ha_2)
)
}
} else {
print(paste("TIDAK ADA",file_csv,sep=""))
}
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
rm(list=ls())
setwd("C:/MasseyOffice1/Research/R-Script2019/")
#
#
results <- data.frame(
sensor=character(),
model=character(),
period=character(),
period_date=date(),
month=character(),
region=character(),
subdistrict=character(),
area_ha_1=double(),
area_ha_2=double(),
total=double(),
pct_ha_1=double(),
pct_ha_2=double(),
stringsAsFactors = FALSE
)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
results[nrow(results) + 1, ] <- c(
as.character("S1_PROBA"),
as.character(model_ML),
as.character(paste("'",period,sep = "")),
as.Date(period),
as.character(months(period)),
as.character(substr(subdistrict[j],1,4)),
as.integer(subdistrict[j]),
as.double(area_ha_1),
as.double(area_ha_2),
as.double(total),
as.double(pct_area_1),
as.double(pct_area_2)
)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
debugSource('C:/MasseyOffice1/Research/R-Script2019/ML_PROBA_100m_2019_v1.R', echo=TRUE)
train.data
rice_fmask
# rice <-ML_PROBA_100m_2019_v1
# rice$PHASE <- factor(rice$Phase)
# print(summary(rice))
filename <- "C:/MasseyOffice1/Research/R-Script2019/ML_PROBA_100m_2019_v1_used.csv"
write.csv(rice_fmask, file = filename)
source('C:/MasseyOffice1/Research/R-Script2019/PROBA_2019_plot_spectral_USED.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/PROBA_2019_plot_spectral_USED.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/PROBA_2019_plot_spectral_USED.R', echo=TRUE)
debugSource('C:/MasseyOffice1/Research/R-Script2019/ML_S1_LEE_2019_v7_WEST.R', echo=TRUE)
debugSource('C:/MasseyOffice1/Research/R-Script2019/S1_2019_plot_spectral_USED.R', echo=TRUE)
summary_diff_VH1 <- summarySE(rice, measurevar="diff_VH1", groupvars=c("Phase"))
summary_diff_VH1$band='diff_VH1'
summary_VH1 <- summarySE(rice, measurevar="VH1", groupvars=c("Phase"))
summary_VH1$band='VH1'
summary_VV1 <- summarySE(rice, measurevar="VV1", groupvars=c("Phase"))
summary_VH1 <- summarySE(rice, measurevar="VH1", groupvars=c("Phase"))
summary_VH1$band='VH1'
summary_VV1 <- summarySE(rice, measurevar="VV1", groupvars=c("Phase"))
debugSource('C:/MasseyOffice1/Research/R-Script2019/S1_2019_plot_spectral_USED.R', echo=TRUE)
plotindex <- ggplot(mergeband, aes(x=band, y=mean, group=Phase,color=Phase)) +
geom_line(aes(color=Phase), size=0.7, position = pd) +
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.5, position = pd) +
scale_colour_manual(name="Legend", values = cols_Phase,breaks=c("1","2","3","4"), labels = c("Bare land","Vegetative","Reproductive","Ripening")) +
geom_point(size=2, shape=16, position = pd) + # 21 is filled circle
xlab("Band") +
ylab("Surface reflectance") +
theme_classic() +
scale_x_discrete(labels = c("VH1","VV1","diff_VH1","diff_VV1",)) +
theme(axis.text.x = element_text(angle = 30, hjust = 1), panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank() ,legend.position = "bottom",text=element_text(size=12,  family="Times New Roman"),
legend.box.margin=margin(c(5,5,5,5)))
source('C:/MasseyOffice1/Research/R-Script2019/S1_2019_plot_spectral_USED.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_2019_plot_spectral_USED.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_2019_plot_spectral_USED.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_2019_plot_spectral_USED.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_2019_plot_spectral_USED.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_2019_plot_spectral_USED.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_2019_plot_spectral_USED.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_2019_plot_spectral_USED_v2.R', echo=TRUE)
rm(list=ls())
library(raster)
library(sp)
library(rgdal)
library(ggplot2)
setwd("C:/MasseyOffice1/Research/R-Script2019/")
#'B4','B3','B2','B5'
#'
library(readxl)
points_survey <- read_excel("C:/MasseyOffice1/Research/R-Script2019/survey_merge_49S_48S.xlsx")
points_survey <- read_excel("C:/MasseyOffice1/Research/R-Script2019/survey_merge_49S_48S.xlsx")
points_survey <- points_survey[points_survey$idkab==3212,]
debugSource('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey.R', echo=TRUE)
region
debugSource('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey.R', echo=TRUE)
files <- list.files(pattern = glob2rx(paste("*.tif",sep = "")),path=mainDir_S1_AGG)
files
F:\R-Script-DriveF\S1-ML-2019\BANDS-LEE-PADDY-AGG-100m\VH-MEAN\3212
mainDir_S1_AGG
mainDir_S1_AGG <- paste("F:/R-Script-DriveF/BANDS-LEE-PADDY-AGG-100m/VH-MEAN/",region,sep="")
files <- list.files(pattern = glob2rx(paste("*.tif",sep = "")),path=mainDir_S1_AGG)
files
mainDir_S1_AGG <- paste("F:/R-Script-DriveF/BANDS-LEE-PADDY-AGG-100m/VH-MEAN/",region,sep="")
files <- list.files(pattern = glob2rx(paste("*.tif",sep = "")),path=mainDir_S1_AGG)
files
mainDir_S1_AGG
files
mainDir_S1_AGG
mainDir_S1_AGG <- paste("F:/S1-ML-2019/R-Script-DriveF/BANDS-LEE-PADDY-AGG-100m/VH-MEAN/",region,sep="")
files <- list.files(pattern = glob2rx(paste("*.tif",sep = "")),path=mainDir_S1_AGG)
mainDir_S1_AGG <- paste("F:/S1-ML-2019/R-Script-DriveF/BANDS-LEE-PADDY-AGG-100m/VH-MEAN/",region,sep="")
files <- list.files(pattern = glob2rx(paste("*.tif",sep = "")),path=mainDir_S1_AGG)
mainDir_S1_AGG
mainDir_S1_AGG <- paste("F:/R-Script-DriveF/S1-ML-2019/BANDS-LEE-PADDY-AGG-100m/VH-MEAN/",region,sep="")
files <- list.files(pattern = glob2rx(paste("*.tif",sep = "")),path=mainDir_S1_AGG)
debugSource('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey.R', echo=TRUE)
temp
temp <- strsplit(files_ori, "_")
temp <- substr(temp[[1]][7],1,8)
temp
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey.R', echo=TRUE)
View(results)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey.R', echo=TRUE)
filename <- paste("C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey_long_2019.csv",sep="")
write.csv(results, file = filename)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_survey.R', echo=TRUE)
points_survey <- read_excel("C:/MasseyOffice1/Research/R-Script2019/S1_LEE_DATA_ML_v7_WEST_USED.xlsx")
points_survey_point <- read_excel("C:/MasseyOffice1/Research/R-Script2019/S1_LEE_DATA_ML_v7_WEST_AREA.xlsx")
points_survey <- read_excel("C:/MasseyOffice1/Research/R-Script2019/S1_LEE_DATA_ML_v7_WEST_USED.xlsx")
points_survey_point <- read_excel("C:/MasseyOffice1/Research/R-Script2019/S1_LEE_DATA_ML_v7_WEST_AREA.xlsx")
points_survey_point <- read_excel("C:/MasseyOffice1/Research/R-Script2019/S1_LEE_DATA_ML_v7_WEST_POINT.xlsx")
points_survey_point <- read_excel("C:/MasseyOffice1/Research/R-Script2019/S1_LEE_DATA_ML_v7_WEST_USED_POINT.xlsx
results <- data.frame(code=character(),
POINT_X_49S=double(),
POINT_Y_49S=double(),
Regency =character(),
region =character(),
Sensor=double(),
date=double(),
scene=character(),
VH_MEAN=double(),
VV_MEAN=double(),
stringsAsFactors = FALSE
)
operations<- c("MEAN")
bands <- c("VH","VV")
for (i in 1:dim(points_survey)[1]) {
code <- points_survey$code[i]
regency <- 3212 #points_survey$Regency[i]
region <- 32 #points_survey$idkab[i]
print(paste(i,code))
mainDir_S1_AGG <- paste("F:/R-Script-DriveF/S1-ML-2019/BANDS-LEE-PADDY-AGG-100m/VH-MEAN/",region,sep="")
files <- list.files(pattern = glob2rx(paste("*.tif",sep = "")),path=mainDir_S1_AGG)
for (files_current in files) {
files_ori <- files_current
temp <- strsplit(files_ori, "_")
temp <- substr(temp[[1]][7],1,8)
period <- as.Date(temp,"%Y%m%d")
# if (!(period>as.Date("2018-01-01") & period<as.Date("2018-12-31"))) {
#   next
# }
VH_MEAN<-NA
VV_MEAN<-NA
POINT_X_49S <- points_survey_point
POINT_Y_49S <-
for (band in bands) {
for (operation in operations) {
files_current <- gsub("VH",band,files_ori)
files_current <- gsub("MEAN",operation,files_current)
mainDir_S1_AGG <- paste("F:/R-Script-DriveF/S1-ML-2019/BANDS-LEE-PADDY-AGG-100m/",band,"-",operation,"/",region,sep="")
setwd(mainDir_S1_AGG)
if (file.exists(files_current)) {
temp_raster <- raster(files_current)
crs_raster <- projection(temp_raster,asText = TRUE)
if (grepl("+zone=49", crs_raster)==TRUE) {
point_X <- points_survey$POINT_X_49S[i]
point_Y <- points_survey$POINT_Y_49S[i]
} else {
point_X <- points_survey$POINT_X_48S[i]
point_Y <- points_survey$POINT_Y_48S[i]
}
xy <- cbind(point_X, point_Y)
value <- raster::extract(temp_raster, xy)[[1]][1]
if  (is.na(value)) {
next
}
if (band=="VH" & operation=="MEAN") {
VH_MEAN <- value
}
if (band=="VV" & operation=="MEAN") {
VV_MEAN <- value
}
}
}
}
temp <- strsplit(files_current, "_")
temp <- substr(temp[[1]][7],1,8)
date1 <- as.Date(temp,"%Y%m%d")
if (is.na(VH_MEAN)==TRUE) {
next
}
results[nrow(results) + 1, ] <- c(as.character(code),
as.double(point_X),
as.double(point_Y),
as.character(regency),
as.character(region),
as.character("S1AGG"),
as.character(date1),
as.character(files_current),
as.double(VH_MEAN),
as.double(VV_MEAN)
)
}
}
points_survey_point <- read_excel("C:/MasseyOffice1/Research/R-Script2019/S1_LEE_DATA_ML_v7_WEST_USED_POINT.xlsx")
POINT_X_49S <- points_survey_point$POINT_X[points_survey_point$FID_fishne==points_survey$FID_fishne]
POINT_X_49S <- points_survey_point$POINT_X[points_survey_point$FID_fishne==points_survey$FID_fishne[i]]
POINT_X_49S
POINT_Y_49S <-  points_survey_point$POINT_Y[points_survey_point$FID_fishne==points_survey$FID_fishne[i]]
POINT_Y_49S
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_USED.R', echo=TRUE)
code
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_USED.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_USED.R', echo=TRUE)
mainDir_S1_AGG <- paste("F:/R-Script-DriveF/S1-ML-2019/BANDS-LEE-PADDY-AGG-100m/VH-MEAN/",region,sep="")
files <- list.files(pattern = glob2rx(paste("*.tif",sep = "")),path=mainDir_S1_AGG)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_USED.R', echo=TRUE)
files
mainDir_S1_AGG <- paste("F:/R-Script-DriveF/S1-ML-2019/BANDS-LEE-PADDY-AGG-100m/VH-MEAN/",region,sep="")
files <- list.files(pattern = glob2rx(paste("*.tif",sep = "")),path=mainDir_S1_AGG)
files
region
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_USED.R', echo=TRUE)
crs_raster
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_USED.R', echo=TRUE)
View(results)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_USED.R', echo=TRUE)
points_survey_point <- read_excel("C:/MasseyOffice1/Research/R-Script2019/S1_LEE_DATA_ML_v7_WEST_USED_POINT.xlsx")
View(points_survey)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_USED.R', echo=TRUE)
View(results)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_USED_short.R', echo=TRUE)
View(results)
source('C:/MasseyOffice1/Research/R-Script2019/S1_LEE_extract_values_USED_short.R', echo=TRUE)
