}
}
}
print(dim(csv_df)[1])
mainDir_L2A_TIF <- paste("G:/RS_images/S2Pre/L2A-TIF",sep="")
id
source('C:/MasseyOffice1/Research/R-Script2019/ML_S1_LEE_2019_v7_WEST.R')
source('C:/MasseyOffice1/Research/R-Script2019/recap_ML_S1_2019_v7_WEST.R')
source('C:/MasseyOffice1/Research/R-Script2019/ML_S1_LEE_2019_v7_WEST.R')
source('C:/MasseyOffice1/Research/R-Script2019/ML_S1_LEE_2019_v7_WEST.R')
source('C:/MasseyOffice1/Research/R-Script2019/recap_ML_S1_2019_v7_WEST.R')
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step9-2019_recap_paddyarea_PROBA_100_S1_100m_v2.R')
source('C:/Users/framadha/Google Drive/analysis12/analysis_v3.R')
area_xlsx <- read_excel("C:/Users/framadha/Google Drive/analysis12/area_luas_baku.xlsx")
recap_merge$luas_baku_ha <- NA
for (i in 1:nrow(recap_merge)) {
for (j in 1:nrow(area_xlsx)) {
if (recap_merge$subdistrict[i]==area_xlsx$id_kecamatan[j] ) {
recap_merge$luas_baku_ha[i] <- area_xlsx$luas_baku_ha[j]
}
}
}
beep(sound = 10)
area_kec <- read_excel("C:/Users/framadha/Google Drive/analysis12/area_RS.xlsx")
recap_merge$area_RS <- NA
for (i in 1:nrow(recap_merge)) {
for (j in 1:nrow(area_kec)) {
if (recap_merge$subdistrict[i]==area_kec$subdistrict[j] ) {
recap_merge$area_kec[i] <- area_kec$area_RS[j]
}
}
}
recap_merge$area_factor <- recap_merge$area_RS/recap_merge$luas_baku_ha
recap_merge$no <- NULL
names(recap_merge)[names(recap_merge) == "area_ha_1"] <- "BL"
names(recap_merge)[names(recap_merge) == "area_ha_2"] <- "VEG"
names(recap_merge)[names(recap_merge) == "area_ha_3"] <- "REPRO"
names(recap_merge)[names(recap_merge) == "area_ha_4"] <- "RIPE"
recap_merge1 <- recap_merge[,c("PROVINSI","KABUPATEN","KECAMATAN","subdistrict","region","TAHUN","BULAN",
"period1","period","BL","VEG","REPRO","RIPE","total","Paddy_planting",
"Paddy_harvested","luas_baku_ha","area_kec","area_factor")]
write.csv(recap_merge1, file = "C:/Users/framadha/Google Drive/analysis12/analysis_full_v3.csv")
recap_merge1 <- recap_merge1[recap_merge1$TAHUN %in% c("2017","2018"),]
recap_merge1 <- recap_merge1[!recap_merge1$period1 %in% c("2018-08","2018-09","2018-10","2018-11","2018-12"),]
write.csv(recap_merge1, file = "C:/Users/framadha/Google Drive/analysis12/analysis_area_v3.csv")
beep(sound = 4)
area_kec <- read_excel("C:/Users/framadha/Google Drive/analysis12/area_RS.xlsx")
recap_merge$area_RS <- NA
for (i in 1:nrow(recap_merge)) {
for (j in 1:nrow(area_RS)) {
if (recap_merge$subdistrict[i]==area_kec$id_kecamatan[j] ) {
recap_merge$area_RS[i] <- area_kec$area_RS[j]
}
}
}
area_kec <- read_excel("C:/Users/framadha/Google Drive/analysis12/area_RS.xlsx")
View(area_kec)
area_xlsx <- read_excel("C:/Users/framadha/Google Drive/analysis12/area_luas_baku.xlsx")
recap_merge$luas_baku_ha <- NA
recap_merge$area_RS <- NA
for (i in 1:nrow(recap_merge)) {
for (j in 1:nrow(area_xlsx)) {
if (recap_merge$subdistrict[i]==area_xlsx$id_kecamatan[j] ) {
recap_merge$luas_baku_ha[i] <- area_xlsx$luas_baku_ha[j]
recap_merge$area_RS[i] <- area_xlsx$area_RS[j]
}
}
}
beep(sound = 10)
recap_merge$area_factor <- recap_merge$area_RS/recap_merge$luas_baku_ha
recap_merge$no <- NULL
names(recap_merge)[names(recap_merge) == "area_ha_1"] <- "BL"
names(recap_merge)[names(recap_merge) == "area_ha_2"] <- "VEG"
names(recap_merge)[names(recap_merge) == "area_ha_3"] <- "REPRO"
names(recap_merge)[names(recap_merge) == "area_ha_4"] <- "RIPE"
recap_merge1 <- recap_merge[,c("PROVINSI","KABUPATEN","KECAMATAN","subdistrict","region","TAHUN","BULAN",
"period1","period","BL","VEG","REPRO","RIPE","total","Paddy_planting",
"Paddy_harvested","luas_baku_ha","area_kec","area_factor")]
recap_merge1 <- recap_merge[,c("PROVINSI","KABUPATEN","KECAMATAN","subdistrict","region","TAHUN","BULAN",
"period1","period","BL","VEG","REPRO","RIPE","total","Paddy_planting",
"Paddy_harvested","luas_baku_ha","area_RS","area_factor")]
write.csv(recap_merge1, file = "C:/Users/framadha/Google Drive/analysis12/analysis_full_v3.csv")
recap_merge1 <- recap_merge1[recap_merge1$TAHUN %in% c("2017","2018"),]
recap_merge1 <- recap_merge1[!recap_merge1$period1 %in% c("2018-08","2018-09","2018-10","2018-11","2018-12"),]
write.csv(recap_merge1, file = "C:/Users/framadha/Google Drive/analysis12/analysis_area_v3.csv")
beep(sound = 4)
library(tseries)
install.packages(tseries)
install.packages("tseries")
library(tseries)
data (sales)  # parts of Example 11.2.2 from Brockwell and Davies (1991).
library(tseries)
data (sales)  # parts of Example 11.2.2 from Brockwell and Davies (1991).
data(sales)  # parts of Example 11.2.2 from Brockwell and Davies (1991).
library(tseries)
data(sales)  # parts of Example 11.2.2 from Brockwell and Davies (1991).
sal <- diff (sales)
led <- diff(lead)
ccf (led, sal, lag = 20, ylim = range(-1,1), type="o")
data(sales)  # parts of Example 11.2.2 from Brockwell and Davies (1991).
sal <- diff (sales)
led <- diff(lead)
ccf (led, sal, lag = 20, ylim = range(-1,1), type="o")
set.seed(123)
x = arima.sim(model=list(0.2, 0, 0.5), n = 100)
y = arima.sim(model=list(0.4, 0, 0.4), n = 100)
ccf(x, y, type="correlation")
Find_Max_CCF<- function(a,b)
{
d <- ccf(a, b, plot = FALSE)
cor = d$acf[,,1]
lag = d$lag[,,1]
res = data.frame(cor,lag)
res_max = res[which.max(res$cor),]
return(res_max)
}
Find_Max_CCF(x, y)
ccf(x, y, type="correlation")
Find_Max_CCF(x, y)
plot(x)
plot(y)
plot(x)
plot(y,add=TRUE)
plot(x,y)
plot(x)
plot(y,type="l",col="red")
lines(x,col="green")
ccf(x, y, type="correlation")
Find_Max_CCF(x, y)
ccf(x, y, type="correlation")
cor = ccf$acf[,,1]
d<-ccf(x, y, type="correlation")
cor = d$acf[,,1]
lag = d$lag[,,1]
cor
lag
lag = d$lag[,,1]
res = data.frame(cor,lag)
res
res = data.frame(cor,lag)
res_max = res[which.max(res$cor),]
res_max
# plot the graph in R
set.seed(15)
a = c(1,2,-2,4,2,3,1,0,3,4,2,3,1)
b = a + rnorm(length(a), sd = 0.4)
plot(ts(b), col="#f44e2e", lwd=3)
lines(a, col="#27ccc0", lwd=3)
corr = ccf(a,b)
corr
Find_Max_CCF(a, b)
a = c(1,2,-2,4,2,3,1,0,3,4,2,3,1)
plot(ts(b), col="#f44e2e", lwd=3)
lines(a, col="#27ccc0", lwd=3)
file_csv <- "C:/Users/framadha/Google Drive/analysis12/analysis_area_v3.csv"
dat = as.data.frame(read.csv(file_csv, header = TRUE))
View(dat)
data_clear <- dat[dat$period1<>,]
data_clear <- dat[dat$period1<>"2017-12-31",]
data_clear <- dat[dat$period1 != "2017-12-31",]
data_clear
data_clear <- dat[dat$period1 != "2017-12-31",]
data_clear <- dat[dat$period1 != "'2017-12-31",]
View(dat)
data_clear <- dat[dat$period != "'2017-12-31",]
data_clear <- dat[dat$period != "'2017-12-31",]
data_clear_kecamatan <- dat[dat$subdistrict != "3212210",]
data_clear <- dat[dat$period != "'2017-12-31",]
data_clear_kecamatan <- data_clear[data_clear$subdistrict == "3212210",]
data_clear_kecamatan
VEG_list <- data_clear_kecamatan$VEG
RIPE_list <- data_clear_kecamatan$RIPE
plot(ts(VEG_list), col="#f44e2e", lwd=3)
lines(RIPE_list, col="#27ccc0", lwd=3)
ccf(VEG_list, RIPE_list)
Find_Max_CCF(VEG_list, RIPE_list)
plot(ts(VEG_list), col="#f44e2e", lwd=3)
lines(RIPE_list, col="#27ccc0", lwd=3)
REPRO_list <- data_clear_kecamatan$REPRO
Find_Max_CCF(VEG_list, REPRO_list)
Find_Max_CCF(REPRO_list, RIPE_list)
Paddy_planting_list <- data_clear_kecamatan$Paddy_planting
Find_Max_CCF(VEG_list, Paddy_planting_list)
Paddy_harvested_list <- data_clear_kecamatan$Paddy_harvested
Find_Max_CCF(VEG_list, Paddy_harvested_list)
Find_Max_CCF(VEG_list, RIPE_list)
Find_Max_CCF(VEG_list, REPRO_list)
Find_Max_CCF(REPRO_list, RIPE_list)
Find_Max_CCF(VEG_list, Paddy_planting_list)
Find_Max_CCF(VEG_list, Paddy_harvested_list)
Find_Max_CCF(VEG_list, Paddy_harvested_list)
Find_Max_CCF(Paddy_planting_list, Paddy_harvested_list)
View(data_clear_kecamatan)
View(dat)
View(data_clear)
data_admin <- data_clear[c(1:5),]
data_admin
data_admin <- data_clear[c(1:5),]
View(data_admin)
data_admin <- data_clear[c(1:5)]
View(data_admin)
data_admin <- data_clear[c(2:5)]
View(data_admin)
data_admin <- unique(data_admin)
data_admin <- unique(data_admin)
data_admin$VEG.REPRO.corr <- NA
data_admin$VEG.REPRO.lag <- NA
data_admin$VEG.RIPE.corr <- NA
data_admin$VEG.RIPE.lag <- NA
data_admin$VEG.planting.corr <- NA
data_admin$VEG.planting.lag <- NA
data_admin$VEG.harvested.corr <- NA
data_admin$VEG.harvested.lag <- NA
dim(data_admin)
id_kec <- data_admin$subdistrict[i]
i<-1
a <- Find_Max_CCF(VEG_list, REPRO_list)
a
a$cor
source('C:/Users/framadha/Google Drive/analysis12/korelasi2.R')
source('C:/Users/framadha/Google Drive/analysis12/korelasi2.R')
library(AER)
install.packages("AER")
install.packages("quantmod")
install.packages("quantmod")
install.packages("dynlm")
install.packages("orcutt")
install.packages("nlme")
install.packages("stargazer")
library(AER)
library(quantmod)
library(dynlm)
library(orcutt)
library(nlme)
library(stargazer)
data("FrozenJuice")
FOJCPI <- FrozenJuice[, "price"]/FrozenJuice[, "ppi"]
FOJC_pctc <- 100 * diff(log(FOJCPI))
FDD <- FrozenJuice[, "fdd"]
FOJCPI_xts <- as.xts(FOJCPI)
FDD_xts <- as.xts(FrozenJuice[, 3])
# Plot orange juice price index
plot(as.zoo(FOJCPI),
col = "steelblue",
lwd = 2,
xlab = "Date",
ylab = "Price index",
main = "Frozen Concentrated Orange Juice")
par(mfrow = c(2, 1))
# Plot percentage changes in prices
plot(as.zoo(FOJC_pctc),
col = "steelblue",
lwd = 2,
xlab = "Date",
ylab = "Percent",
main = "Monthly Changes in the Price of Frozen Conentrated Orange Juice")
# plot freezing degree days
plot(as.zoo(FDD),
col = "steelblue",
lwd = 2,
xlab = "Date",
ylab = "Freezing degree days",
main = "Monthly Freezing Degree Days in Orlando, FL")
source('~/.active-rstudio-document', echo=TRUE)
# plot freezing degree days
plot(as.zoo(FDD),
col = "steelblue",
lwd = 2,
xlab = "Date",
ylab = "Freezing degree days",
main = "Monthly Freezing Degree Days in Orlando, FL")
orange_SR <- dynlm(FOJC_pctc ~ FDD)
coeftest(orange_SR, vcov. = vcovHAC)
orange_DLM <- dynlm(FOJC_pctc ~ FDD + L(FDD, 1:6))
coeftest(orange_DLM, vcov. = vcovHAC)
debugSource('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list)) + L(ts(VEG_list), 2))
GDPGR_AR2
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),1))
GDPGR_AR2
coeftest(GDPGR_AR2, vcov. = sandwich)
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
summary(GDPGR_AR2)$sigma
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),1))
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list)))
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
coeftest(GDPGR_AR2, vcov. = sandwich)
ts(Paddy_harvested_list)
L(ts(VEG_list))
ts(VEG_list)
data_admin$VEG.planting.lag[i]
a <- Find_Max_CCF(VEG_list, Paddy_planting_list)
a
a <- Find_Max_CCF(VEG_list, Paddy_harvested_list)
data_admin$VEG.harvested.corr[i] <- a[1]$cor
data_admin$VEG.harvested.lag[i] <- a[2]$lag
a
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),-7))
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
summary(GDPGR_AR2)$sigma
coeftest(GDPGR_AR2, vcov. = sandwich)
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
coeftest(GDPGR_AR2, vcov. = sandwich)
a
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
summary(GDPGR_AR2)$sigma
coeftest(GDPGR_AR2, vcov. = sandwich)
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
summary(GDPGR_AR2)$sigma
coeftest
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
coeftest(GDPGR_AR2, vcov. = sandwich)
b <- coeftest(GDPGR_AR2, vcov. = sandwich)
b
b[1]
b[2]
debugSource('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
debugSource('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),7))
b <- coeftest(GDPGR_AR2, vcov. = sandwich)
summary(GDPGR_AR2)$r.squared
b
a <- Find_Max_CCF(VEG_list, Paddy_harvested_list)
data_admin$VEG.harvested.corr[i] <- a[1]$cor
data_admin$VEG.harvested.lag[i] <- a[2]$lag
a
v
b
GDPGR_AR2
rsquare <-0
reg <- coeftest(GDPGR_AR2, vcov. = sandwich)
reg
rsquare_max <-0
lag_max <- -10
for (j in -10:10) {
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),j))
rsquare <- summary(GDPGR_AR2)$r.squared
if (rsquare>rsquare_max) {
lag_max <- j
rsquare_max <-lag_max
}
}
lag_max
rsquare_max
VEG_list
Paddy_harvested_list
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),j))
for (j in -10:10) {
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),j))
rsquare <- summary(GDPGR_AR2)$r.squared
if (rsquare>rsquare_max) {
lag_max <- j
rsquare_max <-lag_max
}
}
j
rsquare_max <-0
lag_max <- -10
for (j in -10:10) {
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),j))
rsquare <- summary(GDPGR_AR2)$r.squared
if (rsquare>rsquare_max) {
lag_max <- j
rsquare_max <-lag_max
}
}
lag_max
j
rsquare_max <-0
lag_max <- -10
for (j in -10:10) {
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),j))
rsquare <- summary(GDPGR_AR2)$r.squared
if (rsquare>rsquare_max) {
lag_max <- j
rsquare_max <-rsquare
}
}
rsquare_max
lag_max
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),lag_max))
GDPGR_AR2
GDPGR_AR2 <- dynlm(ts(Paddy_harvested_list) ~ L(ts(VEG_list),lag_max))
reg <- coeftest(GDPGR_AR2, vcov. = sandwich)
reg
reg <- coeftest(GDPGR_AR2, vcov. = sandwich)
reg
reg[1]
reg[2]
reg[3]
reg
reg <- coeftest(GDPGR_AR2, vcov. = sandwich)
data_admin$VEG.harvested.reg.intercept.estimate[i] <- reg[1]
data_admin$VEG.harvested.reg.intercept.SE <- reg[3]
data_admin$VEG.harvested.reg.intercept.Tvalue[i] <- reg[5]
data_admin$VEG.harvested.reg.intercept.Pe <- reg[7]
data_admin$VEG.harvested.reg.X1.estimate[i] <- reg[2]
data_admin$VEG.harvested.reg.X1.SE <- reg[4]
data_admin$VEG.harvested.reg.X1.Tvalue[i] <- reg[6]
data_admin$VEG.harvested.reg.X1.Pe <- reg[7]
data_admin$VEG.harvested.reg.XLag[i] <- lag_max
data_admin$VEG.harvested.reg.rsquare[i] <- summary(GDPGR_AR2)$r.squared
data_admin$VEG.harvested.reg.sigma[i] <- summary(GDPGR_AR2)$sigma
View(data_admin)
source('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
reg
[9]
reg[9]
reg
reg[1,1]
reg[1,2]
reg[1,4]
reg[1,5]
reg[3,1]
reg[3]
reg[1,1]
reg
reg[1,2]
reg
source('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
data_admin$VEG.harvested.reg
data_admin$VEG.harvested.reg <- reg
data_admin$VEG.harvested.reg <- as.character(reg)
data_admin$VEG.harvested.reg <- as.array(reg)
as.array(reg)
reg$
q
reg[1]
reg[1,4]
reg
source('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
source('C:/Users/framadha/Google Drive/analysis12/korelasi3.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
mainDir_BAT
debugSource('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
file_from
debugSource('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
debugSource('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
file_from <- paste(region,"_",period,"_PROBA-S1-100_ML_SENSOR_",composite_str,"_utm_",model_ML,".tif", sep="")
file_from
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
debugSource('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
file_from
folder_ori
WEST-2017-01-12_PROBA-S1-100_ML_SENSOR_utm_12_svmRadial0610.tif
file_from
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
debugSource('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
folder_ori <-   paste("F:/R-Script-DriveF/ML-PROBA-100-S1-100/CLASSIFY-COMPOSITE-",composite_str,"/",period,"/",model_ML,"/",collapse = "",sep = "")
if (dir.exists(folder_ori)==FALSE) {
next
}
setwd(file.path(folder_ori))
file_from <- paste(region,"-",period,"_PROBA-S1-100_ML_SENSOR_utm_",composite_str,"_",model_ML,".tif", sep="")
WEST-2017-01-12_PROBA-S1-100_ML_SENSOR_utm_12_svmRadial0610.tif
folder_ori <-   paste("F:/R-Script-DriveF/ML-PROBA-100-S1-100/CLASSIFY-COMPOSITE-",composite_str,"/",period,"/",model_ML,"/",collapse = "",sep = "")
if (dir.exists(folder_ori)==FALSE) {
next
}
setwd(file.path(folder_ori))
file_from <- paste(region,"-",period,"_PROBA-S1-100_ML_SENSOR_utm_",composite_str,"_",model_ML,".tif", sep="")
file_from
file_from <- paste(region,"-",period,"_PROBA-S1-100_ML_SENSOR_utm_",composite_str,"_",model_ML,".tif", sep="")
if (file.exists(file_from)==FALSE) {
next
}
file_to <- paste(folder_to,region,"-",period,"_PROBA_S1_ML_utm_SENSOR_25m_",composite_str,"_",model_ML,".tif", sep="")
file_to
#print(paste(region,name_band_to,sep="-"))
tif_ori <- paste(folder_ori, "/",file_from,sep="")
temp <- paste(temp, "\"C:/OSGeo4W64/bin/gdalwarp.exe\" -tr 25 25 ",tif_ori," ", file_to, "  -co COMPRESS=DEFLATE -co TILED=YES --config GDAL_CACHEMAX 1000 --config GDAL_NUM_THREADS 2 ", "\r\n",sep="")
debugSource('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step6-2019_resample_sensor_PROBA_100_S1_100m_v2.R', echo=TRUE)
folder_ML_classify_fmask <- paste("F:/R-Script-DriveF/ML-PROBA-100-S1-100/CLASSIFY-COMPOSITE-SENSOR-",composite_str,"-25m/",collapse = "",sep = "")
period_list_classify <- sort(list.dirs(folder_ML_classify_fmask,full.names = FALSE,recursive = FALSE),decreasing = FALSE)
period_list_classify
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step7-2019_paddysplit_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step7-2019_paddysplit_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
debugSource('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step8-2019_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
paddy_raster_df_count_subdistrict
paddy_raster_df_count_subdistrict <- table(na.omit(as.data.frame(raster_paddy)))
temp <-paddy_raster_df_count_subdistrict * 25 * 25 / 10000
temp
temp2 <- as.data.frame(temp,stringsAsFactors = FALSE)
temp2
temp2$code <- temp2$Var1
temp2$code <- temp2$Var1
temp2$area_ha <- temp2$Freq
temp2$Var1 <- NULL
temp2$Freq <- NULL
temp2
temp2$Freq <- NULL
write.csv(temp2, file = file_to)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step8-2019_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step8-2019_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
source('C:/MasseyOffice1/Research/R-Script2019/Run-ML-LS8_S2_S1v1-step8-2019_paddyarea_SENSOR_PROBA_100_S1_100m_v2.R', echo=TRUE)
